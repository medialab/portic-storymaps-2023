@use "sass:math";
// @import '../../node_modules/bulma/css/bulma.min.css';
@import url("https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,100;0,300;0,400;0,500;0,600;0,700;1,100;1,300;1,400;1,500;1,600;1,700&family=Lora:ital,wght@0,400;0,600;1,400;1,600&display=swap");
@import "./variables.scss";

html {
  overflow-x: hidden;
  @include phone {
    max-width: 100vw;
    overflow-x: hidden;
  }
}

body {
  font-family: $font-family-2;
  color: $color-text;
  overflow-x: hidden;
}

#root {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

#wrapper {
  position: relative;
  left: 0;
  top: 0;
  width: 100vw;
  // height: 100%;
  display: flex;
  flex-flow: column nowrap;
  align-content: stretch;
  padding: 0;
  // padding-bottom: $footer_height * 1;
  min-height: 100vh;
}

#wrapper > main {
  display: flex;
  // padding: 1rem;
  padding-top: $header_height;
  justify-content: stretch;
  align-content: stretch;
  @include tablet {
    padding-top: 0;
  }
}

header {
  position: fixed; /* pour fixer le header pendant le scroll */
  width: 100%;
  // z-index: 2;
  font-family: $font-family-1;

  @media print {
    display: none;
  }
}

/** 
 * Tag-level default stylings
 */

h1,
h2,
h3,
h4,
h5,
svg text {
  font-family: $font-family-1;
}

button {
  border: none;
  background: rgba(220, 220, 220, 1);
  padding: 0.5rem;
  font-family: "Karla", sans-serif;
  outline: none;
  cursor: pointer;
}

button.is-active {
  background: rgba(50, 50, 50, 1);
  color: white;
}

/**
 * Scrollbar customization
 */

/* width */
::-webkit-scrollbar {
  width: 10px;
}

/* Track */
::-webkit-scrollbar-track {
  background: $color-background;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: $color-text;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: $color-accent;
}

dfn {
  cursor: help;
  font-style: normal;
  margin: 0;
  margin-left: calc($small-gutter / 4);
  background: $color-background-blue;
  border-radius: 50%;
  padding: 0;
  padding-left: 0.5em;
  padding-right: 0.5em;
  padding-bottom: 0.1em;
  font-size: 0.5em;
  position: relative;
  top: -0.7em;
  transition: 0.5s ease all;
  &:hover {
    background: $color-text;
    color: $color-background;
  }
}

/**
 * ==========
 * REUSABLE COMPONENTS
 * ==========
 */

/**
 * Tooltip styling
 */
.__react_component_tooltip {
  background: white !important;
  color: $color-text !important;
  font-family: $font-family-1;
  max-width: 300px;
  padding: $medium-gutter !important;
  &:after {
    display: none !important;
  }
}

/**
 * Caller component to display scrolly-telling change anchors on screen (for debug mode or display mode)
 */
.Caller:not(.is-inline) {
  background: $color-background-blue;
  font-family: $font-family-1;
  padding: 0; // $small-gutter;
  min-width: 5rem;
  min-height:.5rem;
  display: inline-block;
  font-size: 0.7rem;
  cursor: pointer;
  &.is-invalid {
    background: rgba(192, 106, 106, 0.8);
  }
  &.is-active {
    background: $color-accent-background;
    color: white;
  }
  &.is-clearfix {
    display: none;
  }
  &.is-hidden {
    max-width: 2rem;
    padding: 0.3rem;
    margin: 0;
  }
}
.Caller.is-inline {
  font-family: inherit;
  text-decoration: underline;
  font-size: inherit;
  cursor: pointer;
  &:hover {
    color: brown;
  }
}


.CommentedImage,
.CommentedVideo {
  margin: 0;
  max-height: 100%;
  display: flex;
  flex-flow: column nowrap;
  position: relative;
  > img,
  > iframe {
    flex: 1;
    flex: 1;
    cursor: pointer;
    transition: .5s ease all;
    background: rgba(0,0,0,0.02);
    &:hover {
      background: rgba(0,0,0,0.05);

    }
  }

  .click-prompt {
    position: absolute;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    pointer-events: none;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(0,0,0,0.7);
    color: white;
    opacity: 0;
    transition: .5s ease all;
    font-family: $font-family-1;
  }
  &:hover {
    .click-prompt {
     opacity: 1;
    }
  }
}

.CommentedVideo {
  width: 100%;
  height: 100%;
  margin: 0;
  iframe {
    width: 100%;
    height: 100%;
  }
}

.PlainPageVisualization {
  min-height: 500px;
  max-height: 70vh;
  width: 100%;
  // border: 1px solid rgba(100,100,100,0.3);
  padding: 0;
  .VisualizationController {
    position: relative;
    height: 100%;
  }
  figcaption {
    border-top: 1px solid rgba(100,100,100,0.3);
    margin: 1rem 1rem 0 1rem;
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    // font-style: italic;
    font-size: .9em;
    font-family: $font-family-1;
  }
}

/**
 * controller wrapping visualizations in several contexts and displaying a margin
 */
// .VisualizationController {
//   width: calc(100% - 2rem);
//   height: calc(100% - 2rem);
//   left: 1rem;
//   top: 1rem;
//   position: absolute;
//   display: flex;
//   align-items: center;
// }

/**
 * ==========
 * SHARED LAYOUTS
 * ==========
 */

/**
 * Shared layouts for loader placement in 2-columns layouts
 */
.ScrollyPage + .Loader,
.Home + .Loader {
  width: 50vw;
  left: 50vw;
}

.Home + .Loader {
  position: absolute;
  top: 100vh;
  height: 100vh;
  .loader-container .loading-bar {
    background: white;
  }
}

/**
  * Secondary page layout (used in Atlas, PlainPage, ...)
  */
.secondary-page {
  margin: 0;
  padding: 0;
  padding-top: 3em;
  width: 100vw;
  min-height: calc(100vh - #{$footer_height});
  background: $color-background;
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  @media print {
    background: white;
    display: block;
  }
}

/**
  * Centered contents layout (used in Atlas, PlainPage, ...)
  */
.centered-contents {
  min-width: $screen-md-min;
  max-width: $screen-md-min;
  @include tablet {
    margin-top: $header_height;
    min-width: unset;
    max-width: unset;
    width: 100%;
    padding: 0 $medium-gutter 0 $medium_gutter;
  }
}

/**
  * Vis focus used in atlas and scrollypage views (two-columns vis + explanations)
  */
.vis-focus-container {
  position: fixed;
  right: 0.5rem;
  top: 0;
  height: 100vh;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  transition: 0.5s ease all;
  opacity: 0;
  pointer-events: none;
  button {
    background: transparent;
    border: none;
    font-size: 1.5rem;
    font-weight: 800;
    pointer-events: none;
    transition: 0.5s ease all;
    cursor: pointer;
    border-radius: 50%;
    border: 1px solid black;
    height: 1.5rem;
    width: 1.5rem;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: center;
    padding-top: 0.6em;
  }

  @include phone {
    &.is-visible {
      opacity: 1;
      button {
        pointer-events: all;
      }
    }

    &.is-active {
      right: calc(100vw - 3rem);
      button {
        rotate: -180deg;
      }
    }
  }
}

/**
 * ===========
 * VISUALIZATIONS SHARED CLASSES
 * ===========
 */

/**
 * Reusable visualization components shared classes
 */
.visualization-title {
  margin: 0;
  padding: 0;
  margin-bottom: 0.5rem;
  color: inherit;
  font-weight: 500;
  font-size: 1rem;
  margin-left: 0;
  margin-top: 0;
}

/**
 * Reusable color legend
 */
.ColorLegend {
  font-family: $font-family-1;
  background: inherit;
  padding: $small-gutter;
  padding-top: 0;
  box-sizing: border-box;
  position: relative;
  h5 {
    margin: 0;
    padding: 0;
  }
  .color-legend {
    list-style: none;
    padding: 0;
    margin-top: $small-gutter;
    li {
      display: flex;
      flex-flow: row nowrap;
      margin-bottom: $small-gutter;
      font-size: 0.7rem;
      align-items: center;
      .color-box {
        display: inline-block;
        width: 0.7rem;
        min-width: 0.7rem;
        height: 0.7rem;
        min-height: 0.7rem;
        margin-right: math.div($small-gutter, 2);
      }
      .color-label {
        position: relative;
      }
    }
  }
}

tspan {
  font-family: inherit;
  font-weight: inherit;
  font-style: inherit;
  color: inherit;
  background: inherit;
}

/**
 * GENERIC VISUALIZATIONS STYLING
 */
.GenericVisualization {
  margin: 0;
  padding: 0;
  .background-rect {
    fill: rgba(0, 0, 0, 0.05);
  }
  text {
    font-family: $font-family-1;
    font-size: 14px;
  }
  .title {
    font-weight: 800;
    font-size: 20px;
  }
  .ticks {
    .tick-mark {
      stroke: grey;
      stroke-width: 0.5;
    }
    text {
      font-size: 10px;
      text-anchor: middle;
    }
    &.left-axis {
      text {
        text-anchor: end;
      }
    }
    .axis-title {
      font-weight: bold;
      font-style: italic;
      // background: $color-text;
      font-size: 0.7rem;
      font-family: $font-family-1;
      text-align: right;

      // text-anchor: end;
    }
    .background-line {
      stroke: rgba(0, 0, 0, 0.2);
      stroke-dasharray: 4, 2;

      &.is-zero {
        stroke: rgba(0, 0, 0, 0.8);
      }
    }
  }
  .headers {
    font-weight: 800;
  }
  path,
  .chart-line {
    stroke: $color-accent;
  }

  .row {
    &.vis-row {
      display: flex;
      flex-flow: row nowrap;
      align-items: stretch;
      svg {
        flex: 1;
      }
    }
  }
}

/**
 * ==========
 * GENERAL COMPONENTS
 * ==========
 */

.HeaderNav {
  display: flex;
  justify-content: space-around;
  flex-direction: row;
}

/**
 * NAV
 */
.nav {
  ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
  }

  a {
    color: inherit;
    text-decoration: none;
  }

  button {
    margin-bottom: $small-gutter;
  }

  .navitem-container a,
  button {
    display: block;
    background: inherit;
    color: inherit;
    font-family: $font-family-1;
    font-size: $fontsize_nav;
    padding-bottom: $small-gutter;
    margin-bottom: 0;

    img {
      max-height: 1.8rem;
    }
  }
  // logo
  .primary-nav-container .navitem-container:first-of-type a {
    padding-bottom: 0;
    img {
      transition: 0.5s ease all;
      transform-origin: center;
      position: relative;
      top: -0.2rem;
    }
    &:hover {
      img {
        rotate: 90deg;
      }
    }
  }

  .navitem-container a.active {
    background: inherit;
    color: inherit;
    border-bottom: 1px solid $color-text;
  }
  button.is-active {
    background: inherit;
    color: inherit;
    font-weight: 800;
  }
}
.nav-large {
  padding: 1rem;
  padding-bottom: 0;
  left: 0;
  top: 0;
  position: fixed;
  width: 100%;
  overflow: auto;
  background: $color-background;
  transition: 0.1s all ease;

  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  box-sizing: border-box;
  justify-content: space-between;

  ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;

    &.primary-nav-container {
      justify-content: start;
      .navitem-container:first-of-type {
        padding-right: 0.5rem;
        a.active {
          border-bottom: none;
        }
      }
    }
    &.secondary-nav-container {
      justify-content: end;
    }
  }

  li:not(:last-of-type):not(.lang-toggle) {
    margin-right: 0.6rem;
  }
  li.lang-toggle button {
    padding-right: 0;
    padding-left: math.div($small-gutter, 2);
    padding-top: 0;
    &:last-of-type {
      padding-left: 0;
    }
  }

  @include xl-screen {
    .navitem-container a {
      font-size: 0.9vw;
    }
  }

  @include tablet {
    display: none;
  }
}

// responsive nav
.nav-drawer {
  display: none;
  position: fixed;
  left: 0;
  top: 0;
  .drawer-header {
    display: flex;
    flex-flow: row nowrap;
    // align-items: center;
    max-width: calc(#{$drawer-width} - #{$medium-gutter * 2});
    .drawer-button {
      z-index: 2;
      background: transparent;
    }
    a {
      display: block;
      // height: 2rem;
      display: flex;
      align-items: center;
    }
    img {
      transition: 0.5s ease all;
      border-radius: 50%;
    }
    h1 {
      margin: 0;
      padding: 0;
      font-size: 1rem;
      font-weight: 400;
      position: relative;
      top: 1rem;
      opacity: 0;
      transition: 0.5s ease all;
    }
    &:hover {
      img {
        rotate: 45deg;
      }
      h1 {
        opacity: 0.7;
      }
    }
  }
  .drawer-body {
    background: $color-accent-background;
    color: white;
    position: absolute;
    left: -$drawer-width;
    top: 0;
    height: 100vh;
    width: $drawer-width;
    display: flex;
    flex-flow: column nowrap;
    justify-content: space-between;
    padding-top: $medium-gutter * 2;
    padding-bottom: $medium-gutter;
    box-sizing: border-box;
    transition: all 0.5s ease;
    padding-right: $medium-gutter;
    ul {
      flex-direction: column;
      align-items: start;
      padding-left: $medium-gutter * 3;
      li {
        margin-bottom: $medium-gutter;
        a {
          padding-bottom: 0;
          &.active {
            border-bottom: 1px solid white;
          }
        }
      }
      &.primary-nav-container {
        padding-top: $medium-gutter * 4;
      }
      &.lang-toggle-container {
        padding: 0;
        flex-direction: row;
        button {
          padding-left: 0;
        }
      }
    }
  }
  .drawer-background {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100vh;
    cursor: pointer;
    background: rgba(0, 0, 0, 0);
    pointer-events: none;
    transition: 0.5s ease all;
  }
  &.is-open {
    .drawer-header {
      h1 {
        color: white;
        opacity: 1;
      }
      img {
        rotate: 90deg;
      }
      &:hover {
        img {
          rotate: 45deg;
        }
      }
    }
    .drawer-background {
      background: rgba(0, 0, 0, 0.7);
      pointer-events: all;
    }
    .drawer-body {
      left: 0;
    }
  }

  @include tablet {
    display: block;
  }
  .drawer-background {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100vh;
    cursor: pointer;
    background: rgba(0, 0, 0, 0);
    pointer-events: none;
    transition: 0.5s ease all;
  }
  &.is-open {
    .drawer-header {
      h1 {
        color: white;
        opacity: 1;
      }
      img {
        rotate: 90deg;
      }
      &:hover {
        img {
          rotate: 45deg;
        }
      }
    }
    .drawer-background {
      background: rgba(0, 0, 0, 0.7);
      pointer-events: all;
    }
    .drawer-body {
      left: 0;
    }
  }

  @include tablet {
    display: block;
  }
}

/**
 * Footer 
 */
.Footer {
  bottom: 0;
  left: 0;
  z-index: 3;
  background: linear-gradient(to bottom, $color-accent-background 10%, $color-accent 90%);
  width: 100%;
  box-sizing: border-box;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  color: white;
  .footer-contents {
    display: grid;
    grid-template-columns: repeat(2, auto);
    grid-gap: $medium-gutter * 2;
    max-width: calc(100vw - #{$medium-gutter * 8});
    margin-top: $medium-gutter * 2;
    margin-bottom: $medium-gutter * 2;
  }

  a {
    color: inherit;
    text-decoration: none;
    font-family: $font-family-1;
    font-weight: 500;
  }
  h2 {
    margin-bottom: 0;
    font-weight: medium;
    font-size: 1rem;
  }
  .column:last-of-type {
    margin-top: 2.2rem;
  }
  p {
    margin-bottom: $small-gutter;
  }

  @include phone {
    .footer-contents {
      padding: $medium-gutter;
      display: flex;
      flex-flow: column nowrap;
    }
    .column {
      margin: 0;
      &:last-of-type {
        margin: 0;
      }
    }
  }

  @media print {
    display: none;
  }
}

foreignObject p {
  margin: 0;
  font-family: $font-family-1;
}
